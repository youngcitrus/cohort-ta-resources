{"version":3,"sources":["utils/routeUtils.js","actions/sessionActions.js","actions/companyActions.js","components/home.js","config.js","components/session.js","actions/itemActions.js","components/itemForm.js","components/itemList.js","components/itemSection.js","components/companyShow.js","components/navbar.js","App.js","reducers/sessionReducer.js","reducers/companyReducer.js","reducers/itemReducer.js","reducers/rootReducer.js","store/configureStore.js","index.js"],"names":["PrivateRoute","Component","component","rest","render","props","loggedIn","to","AuthRoute","TOKEN_KEY","setToken","access_token","type","receiveCompany","payload","receiveCompanies","companies","connect","state","ownProps","Object","values","session","dispatch","fetchCompanies","getState","a","fetch","headers","Authorization","response","ok","json","useEffect","items","map","c","i","className","key","onClick","history","push","id","name","login","email","password","method","body","JSON","stringify","window","localStorage","setItem","useState","setEmail","setPassword","handleChange","e","target","value","onSubmit","preventDefault","onChange","receiveItems","receiveItem","item","createItem","companyId","console","log","updateTab","currentTab","imgSrc","setImgSrc","setName","setType","includes","toLowerCase","placeholder","ItemList","itemEls","src","alt","withRouter","match","params","company","fetchItems","setCurrentTab","fetchCompany","logout","removeItem","loadToken","getItem","localStorageToken","path","Navbar","Session","CompanyShow","exact","Home","initialState","sessionReducer","action","freeze","nextState","assign","companyReducer","newComp","newState","forEach","itemReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","configureStore","document","addEventListener","ReactDOM","StrictMode","getElementById"],"mappings":"qQAGaA,EAAe,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACjE,OACE,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAACC,GAAD,OACL,IAAlBF,EAAKG,SACH,kBAAC,IAAD,CAAUC,GAAG,aACb,kBAACN,EAAcI,QAKVG,EAAY,SAAC,GAAuC,IAA1BP,EAAyB,EAApCC,UAAyBC,EAAW,6BAC9D,OACE,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAACC,GAAD,OACL,IAAlBF,EAAKG,SACH,kBAAC,IAAD,CAAUC,GAAG,MACb,kBAACN,EAAcI,Q,uBChBVI,EAAY,kCAUnBC,EAAW,SAACC,GAEjB,MAAO,CACNC,KAZuB,YAavBD,iBCXIE,EAAiB,SAACC,GACvB,MAAO,CACNF,KAL6B,kBAM7BE,YAIIC,EAAmB,SAACC,GACzB,MAAO,CACNJ,KAX+B,oBAY/BI,cCsCaC,eAdH,SAACC,EAAOC,GACnB,MAAO,CACNH,UAAWI,OAAOC,OAAOH,EAAMF,WAC/BL,aAAcO,EAAMI,QAAQX,iBAKlB,SAACY,GACZ,MAAO,CACNC,eAAgB,kBAAMD,EDjBM,uCAAM,WAAOA,EAAUE,GAAjB,uBAAAC,EAAA,+DACGD,IAAnBd,EADgB,EAC3BW,QAAWX,aADgB,SAEZgB,MAAM,GAAD,OElCiE,OFkCjE,cAAyB,CAAEC,QAAS,CAAEC,cAAelB,KAF9C,YAE7BmB,EAF6B,QAItBC,GAJsB,iCAKND,EAASE,OALH,gBAK1BhB,EAL0B,EAK1BA,UACRO,EAASR,EAAiBC,IANQ,4CAAN,6DCqBfC,EAhDF,SAACZ,GAAW,IAChBmB,EAAiCnB,EAAjCmB,eAAgBb,EAAiBN,EAAjBM,aAGxBsB,qBACC,WAECtB,GAAgBa,MAEjB,CAAEA,EAAgBb,IAInB,IAAIuB,EAAQ7B,EAAMW,UAAUmB,KAAI,SAACC,EAAGC,GAAJ,OAC/B,wBACCC,UAAU,gBACVC,IAAKF,EAELG,QAAS,kBAAMnC,EAAMoC,QAAQC,KAAd,qBAAiCN,EAAEO,OAEjDP,EAAEQ,SAIL,OACC,6BACC,gDAEA,wBAAIN,UAAU,gBAAgBJ,O,QEoBlBjB,cAAQ,MANX,SAACM,GACZ,MAAO,CACNsB,MAAO,SAACC,EAAOC,GAAR,OAAqBxB,EJtBT,SAACuB,EAAOC,GAAR,8CAAqB,WAAOxB,GAAP,mBAAAG,EAAA,sEAElBC,MAAM,GAAD,OG7BiE,OH6BjE,YAAuB,CAClDqB,OAAQ,OACRpB,QAAS,CAAE,eAAgB,oBAC3BqB,KAAMC,KAAKC,UAAU,CAAEL,QAAOC,eALU,YAEnCjB,EAFmC,QAQ5BC,GAR4B,iCASTD,EAASE,OATA,uBAShCrB,EATgC,EAShCA,aACRyC,OAAOC,aAAaC,QAAQ7C,EAAWE,GAVC,kBAWjCY,EAASb,EAASC,KAXe,4CAArB,sDIsBkBkC,CAAMC,EAAOC,QAIrC9B,EAhDK,SAACZ,GAAU,MAEFkD,mBAAS,IAFP,mBAEtBT,EAFsB,KAEfU,EAFe,OAGID,mBAAS,IAHb,mBAGtBR,EAHsB,KAGZU,EAHY,KAMxBC,EAAe,SAACC,IACU,UAAlBA,EAAEC,OAAOhB,KAAmBY,EAAWC,GAC7CE,EAAEC,OAAOC,QASjB,OACC,yBAAKvB,UAAU,gBACd,2CAGA,0BAAMwB,SAXa,SAACH,GACrBA,EAAEI,iBAEF1D,EAAMwC,MAAMC,EAAOC,KASjB,wCAGA,2BAAOH,KAAK,QAAQiB,MAAOf,EAAOkB,SAAUN,IAC5C,2CACA,2BAAOd,KAAK,WAAWhC,KAAK,WAAWiD,MAAOd,EAAUiB,SAAUN,IAClE,4BAAQ9C,KAAK,UAAb,cC7BEqD,EAAe,SAAC/B,GACrB,MAAO,CACNtB,KAL2B,gBAM3BsB,UAIIgC,EAAc,SAACC,GACpB,MAAO,CACNvD,KAX0B,eAY1BuD,SC0CalD,cAAQ,MANX,SAACM,GACZ,MAAO,CACN6C,WAAY,SAACD,EAAMxB,GAAP,OAAcpB,EDzBF,SAAC4C,EAAME,GAAP,8CAAqB,WAAO9C,GAAP,iBAAAG,EAAA,sEACzBC,MAAM,GAAD,OF7BmE,OE6BnE,kBAAqB0C,EAArB,QAAsC,CAC/DrB,OAAQ,OACRpB,QAAS,CACR,eAAgB,oBAEjBqB,KAAMC,KAAKC,UAAUgB,KANwB,cAC1CrC,EAD0C,gBAS7BA,EAASE,OAToB,QAS9CF,EAT8C,QAUjCC,IACJoC,EAASrC,EAATqC,KACR5C,EAAS2C,EAAYC,KAErBG,QAAQC,IAAIzC,GAdiC,2CAArB,sDCyBWsC,CAAWD,EAAMxB,QAIvC1B,EApDE,SAACZ,GAAU,IAErB+D,EAAiD/D,EAAjD+D,WAAYC,EAAqChE,EAArCgE,UAAWG,EAA0BnE,EAA1BmE,UAAWC,EAAepE,EAAfoE,WAFb,EAIGlB,mBAAS,IAJZ,mBAInBmB,EAJmB,KAIXC,EAJW,OAKDpB,mBAAS,IALR,mBAKnBX,EALmB,KAKbgC,EALa,OAMDrB,mBAAS,IANR,mBAMnB3C,EANmB,KAMbiE,EANa,KAQrBnB,EAAe,SAACC,GACC,SAAlBA,EAAEC,OAAOhB,KACZgC,EAAQjB,EAAEC,OAAOC,OACW,SAAlBF,EAAEC,OAAOhB,KACnBiC,EAAQlB,EAAEC,OAAOC,OAEjBc,EAAUhB,EAAEC,OAAOC,QA6BrB,OAVC,0BAAMvB,UAAU,eAAewB,SAdX,SAACH,GACrBA,EAAEI,iBAGFK,EAFc,CAAExB,KAAMA,EAAM8B,OAAQA,EAAQ9D,KAAMA,GAE9ByD,GAEhBzD,IAAS6D,GAAc,CAAE,QAAS,aAAcK,SAASlE,EAAKmE,gBACjEP,EAAU5D,GAEX+D,EAAU,IACVC,EAAQ,IACRC,EAAQ,MAIP,2BAAOhB,MAAOjB,EAAMA,KAAK,OAAOoC,YAAY,qBAAqBhB,SAAUN,IAE3E,2BAAOG,MAAOa,EAAQ9B,KAAK,SAASoC,YAAY,uBAAuBhB,SAAUN,IAEjF,2BAAOG,MAAOjD,EAAMgC,KAAK,OAAOoC,YAAY,qBAAqBhB,SAAUN,IAE3E,4BAAQ9C,KAAK,UAAb,kBAAkC6D,QChCtBQ,EAXE,SAAC5E,GACjB,IAAI6E,EAAU7E,EAAM6B,MAAMC,KAAI,SAACC,GAAD,OAC7B,wBAAIG,IAAKH,EAAEO,GAAIL,UAAU,sBACxB,+BAAQF,EAAEQ,MACV,yBAAKuC,IAAK/C,EAAEsC,OAAQU,IAAKhD,EAAEQ,WAI7B,OADW,wBAAIN,UAAU,gBAAgB4C,IC4D3BG,cAAWpE,aAhBd,SAACC,EAAOC,GACnB,IAAIkD,EAAYlD,EAASmE,MAAMC,OAAOlB,UACtC,MAAO,CACNA,UAAWA,EACXmB,QAAStE,EAAMF,UAAUqD,GACzBnC,MAAOd,OAAOC,OAAOH,EAAMgB,QAAU,OAK3B,SAACX,GACZ,MAAO,CACNkE,WAAY,SAAC9C,EAAI/B,GAAL,OAAcW,EH9CF,SAAC8C,EAAWzD,GAAZ,8CAAqB,WAAOW,GAAP,mBAAAG,EAAA,sEACvBC,MAAM,GAAD,OFpBiE,OEoBjE,kBAAqB0C,EAArB,YAAkCzD,IADhB,YACxCkB,EADwC,QAGjCC,GAHiC,gCAIrBD,EAASE,OAJY,gBAIrCE,EAJqC,EAIrCA,MACRX,EAAS0C,EAAa/B,IALuB,2CAArB,sDG8CWuD,CAAW9C,EAAI/B,QAI1BK,EA5DN,SAACZ,GAAU,MAEQkD,mBAAS,SAFjB,mBAEtBkB,EAFsB,KAEViB,EAFU,KAItBD,EAAiCpF,EAAjCoF,WAAYpB,EAAqBhE,EAArBgE,UAAWnC,EAAU7B,EAAV6B,MAU/B,OAPAD,qBACC,WACCwD,EAAWpB,EAAWI,KAEvB,CAAEA,EAAYgB,EAAYpB,IAI1B,6BAAS/B,UAAU,mBAClB,4BAAKmC,GAEL,yBAAKnC,UAAU,QACd,4BACCA,UAA0B,UAAfmC,EAAyB,WAAa,GACjD7B,KAAK,QAELJ,QAAS,kBAAMkD,EAAc,WAJ9B,SAQA,4BACCpD,UAA0B,UAAfmC,EAAyB,GAAK,WACzC7B,KAAK,aACLJ,QAAS,kBAAMkD,EAAc,eAH9B,eASD,kBAAC,EAAD,CAAUxD,MAAOA,IAEjB,kBAAC,EAAD,CAAUmC,UAAWA,EAAWI,WAAYA,EAAYD,UAAWkB,SCDvDzE,eAfH,SAACC,EAAOC,GACnB,IAAIkD,EAAYlD,EAASmE,MAAMC,OAAOlB,UACtC,MAAO,CACNA,UAAWA,EACXmB,QAAStE,EAAMF,UAAUqD,OAKf,SAAC9C,GACZ,MAAO,CACNoE,aAAc,SAAChD,GAAD,OAAQpB,ERvBI,SAACoB,GAAD,8CAAQ,WAAOpB,EAAUE,GAAjB,qBAAAC,EAAA,+DAIGD,IAAnBd,EAJgB,EAI3BW,QAAWX,aAJgB,SAKZgB,MAAM,GAAD,OExBiE,OFwBjE,sBAAyBgB,GAAM,CAAEf,QAAS,CAAEC,cAAelB,KALpD,YAK7BmB,EAL6B,QAOtBC,GAPsB,gCAQZD,EAASE,OARG,OAQ5BlB,EAR4B,OASlCS,EAASV,EAAeC,IATU,2CAAR,wDQuBK6E,CAAahD,QAI/B1B,EAvCK,SAACZ,GAAW,IACvBsF,EAA4BtF,EAA5BsF,aAActB,EAAchE,EAAdgE,UAUtB,OAPApC,qBACC,WACC0D,EAAatB,KAEd,CAAEsB,EAActB,IAGZhE,EAAMmF,QAGV,6BACC,4BAAKnF,EAAMmF,QAAQ5C,MAGnB,kBAAC,EAAD,OAPyB,QCOb3B,cAAQ,MANX,SAACM,GACZ,MAAO,CACNqE,OAAQ,kBAAMrE,EVqBM,uCAAM,WAAOA,EAAUE,GAAjB,iBAAAC,EAAA,+DACWD,IAAnBd,EADQ,EACnBW,QAAWX,aADQ,SAEJgB,MAAM,GAAD,OG5CiE,OH4CjE,YAAuB,CAClDqB,OAAQ,SACRpB,QAAS,CAAEC,cAAc,UAAD,OAAYlB,MAJV,cAOdoB,KACZqB,OAAOC,aAAawC,WAAWpF,GAC/Bc,EA5CM,CACNX,KAJ0B,kBAsCA,2CAAN,6DUjBPK,EArBA,SAACZ,GACf,OACC,yBAAKiC,UAAU,UACd,wBAAIE,QAAS,kBAAMnC,EAAMoC,QAAQC,KAAK,OAAtC,YACA,4BAAQF,QAASnC,EAAMuF,QAAvB,cCuDY3E,G,MAAAA,aAbH,SAACC,GACZ,MAAO,CACNP,aAAcO,EAAMI,QAAQX,iBAKlB,SAACY,GACZ,MAAO,CACNuE,UAAW,kBAAMvE,EXvCM,uCAAM,WAAOA,GAAP,eAAAG,EAAA,uDACxBf,EAAeyC,OAAOC,aAAa0C,QAAQtF,KAEhDc,EAASb,EAASC,IAHW,2CAAN,2DW2CVM,EAjDH,SAACZ,GAAW,IACfyF,EAAczF,EAAdyF,UAGR7D,qBACC,WACC6D,MAED,CAAEA,IAGH,IAAIE,EAAoB5C,OAAOC,aAAa0C,QAAQtF,GAGhDH,KAFe0F,GAAwC3F,EAAMM,cAKjE,OACC,kBAAC,IAAD,KAEEL,EAAW,kBAAC,IAAD,CAAO2F,KAAK,IAAI/F,UAAWgG,IAAa,KAEpD,kBAAC,IAAD,KAEC,kBAAC,EAAD,CAAWD,KAAK,WAAW/F,UAAWiG,EAAS7F,SAAUA,IAGzD,kBAAC,EAAD,CAAc2F,KAAK,wBAAwB/F,UAAWkG,EAAa9F,SAAUA,IAE7E,kBAAC,EAAD,CAAc+F,OAAO,EAAMJ,KAAK,IAAI/F,UAAWoG,EAAMhG,SAAUA,U,gBCzC7DiG,EAAe,CACpB5D,GAAI,KACJhC,aAAc,MAkBA6F,EAhBQ,WAAmC,IAAlCtF,EAAiC,uDAAzBqF,EAAcE,EAAW,uCACxDrF,OAAOsF,OAAOxF,GAEd,IAAIyF,EAAYvF,OAAOwF,OAAO,GAAI1F,GAElC,OAAQuF,EAAO7F,MACd,IZTuB,YYWtB,OAAOQ,OAAOwF,OAAOD,EAAW,CAAEhG,aAAc8F,EAAO9F,eACxD,IZX0B,eYYzB,OAAO4F,EACR,QACC,OAAOrF,I,QCGK2F,EAnBQ,WAAyB,IAAxB3F,EAAuB,uDAAf,GAAIuF,EAAW,uCAC9CrF,OAAOsF,OAAOxF,GAEd,IAAIyF,EAAYvF,OAAOwF,OAAO,GAAI1F,GAElC,OAAQuF,EAAO7F,MACd,IZN6B,kBYQ5B,IAAIkG,EAAO,eAAML,EAAO3F,QAAQ0E,QAAQ7C,GAAK8D,EAAO3F,QAAQ0E,SAC5D,OAAOpE,OAAOwF,OAAOD,EAAWG,GACjC,IZT+B,oBYU9B,IAAIC,EAAW,GAEf,OADAN,EAAOzF,UAAUgG,SAAQ,SAAC5E,GAAD,OAAQ2E,EAAS3E,EAAEO,IAAMP,KAC3ChB,OAAOwF,OAAOD,EAAWI,GACjC,QACC,OAAO7F,ICQK+F,EAtBK,WAAyB,IAAxB/F,EAAuB,uDAAf,GAAIuF,EAAW,uCAC3CrF,OAAOsF,OAAOxF,GAEd,IAAIyF,EAAYvF,OAAOwF,OAAO,GAAI1F,GAC9B6F,EAAW,GAEf,OAAQN,EAAO7F,MACd,ITR2B,gBSU1B,OADA6F,EAAOvE,MAAM8E,SAAQ,SAAC3E,GAAD,OAAQ0E,EAAS1E,EAAEM,IAAMN,KACvC0E,EACR,IbX6B,kBae5B,OAHAN,EAAO3F,QAAQoB,MAAM8E,SAAQ,SAAC3E,GACd,UAAXA,EAAEzB,OAAkBmG,EAAS1E,EAAEM,IAAMN,MAEnC0E,EACR,ITf0B,eSgBzB,OAAO3F,OAAOwF,OAAOD,EAAdvF,OAAA,IAAAA,CAAA,GAA4BqF,EAAOtC,KAAKxB,GAAK8D,EAAOtC,OAC5D,QACC,OAAOjD,ICTKgG,EANKC,YAAgB,CACnC7F,QAASkF,EACTxF,UAAW6F,EACX3E,MAAO+E,ICHFG,EAAmBhE,OAAOiE,sCAAwCC,ICElEC,EDCiB,WAAsB,IAArBhB,EAAoB,uDAAP,GACnC,OAAOiB,YACLN,EACAX,EAEAa,EAAiBK,YAAgBC,OCNvBC,GAEdC,SAASC,iBAAiB,oBAAoB,WAE5CC,IAAS1H,OACP,kBAAC,IAAM2H,WAAP,KACE,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,EAAD,QAGJK,SAASI,eAAe,c","file":"static/js/main.4c8912d2.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route {...rest} render={(props) => (\n      rest.loggedIn === false\n      ? <Redirect to=\"/session\" />\n      : <Component {...props} />\n    )} />\n  )\n}\n\nexport const AuthRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route {...rest} render={(props) => (\n      rest.loggedIn === true\n      ? <Redirect to=\"/\" />\n      : <Component {...props} />\n    )} />\n  )\n}","import { baseUrl } from '../config';\n\nexport const TOKEN_KEY = 'fruitstand/authentication/token';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const REMOVE_TOKEN = 'REMOVE_TOKEN';\n\nconst removeToken = () => {\n\treturn {\n\t\ttype: REMOVE_TOKEN\n\t};\n};\n\nconst setToken = (access_token) => {\n\t// debugger\n\treturn {\n\t\ttype: SET_TOKEN,\n\t\taccess_token\n\t};\n};\n\nexport const loadToken = () => async (dispatch) => {\n\tconst access_token = window.localStorage.getItem(TOKEN_KEY);\n\tif (access_token) {\n\t\tdispatch(setToken(access_token));\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\t// debugger\n\tconst response = await fetch(`${baseUrl}/session`, {\n\t\tmethod: 'post',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t\tbody: JSON.stringify({ email, password })\n\t});\n\n\tif (response.ok) {\n\t\tconst { access_token } = await response.json();\n\t\twindow.localStorage.setItem(TOKEN_KEY, access_token);\n\t\treturn dispatch(setToken(access_token));\n\t}\n};\n\nexport const logout = () => async (dispatch, getState) => {\n\tconst { session: { access_token } } = getState();\n\tconst response = await fetch(`${baseUrl}/session`, {\n\t\tmethod: 'delete',\n\t\theaders: { Authorization: `Bearer ${access_token}` }\n\t});\n\n\tif (response.ok) {\n\t\twindow.localStorage.removeItem(TOKEN_KEY);\n\t\tdispatch(removeToken());\n\t}\n};\n","import { baseUrl } from '../config';\n\nexport const RECEIVE_COMPANY = 'RECEIVE_COMPANY';\nexport const RECEIVE_COMPANIES = 'RECEIVE_COMPANIES';\n\nconst receiveCompany = (payload) => {\n\treturn {\n\t\ttype: RECEIVE_COMPANY,\n\t\tpayload\n\t};\n};\n\nconst receiveCompanies = (companies) => {\n\treturn {\n\t\ttype: RECEIVE_COMPANIES,\n\t\tcompanies\n\t};\n};\n\nexport const fetchCompany = (id) => async (dispatch, getState) => {\n\t// Example of adding in an auth header for a route that requires it\n\t// We can take in getState as a second argument to our function, then get the access_token we stored in our session reducer\n\t// The `Authorization` header lines up with what our server is expecting the header to be named\n\tconst { session: { access_token } } = getState();\n\tconst response = await fetch(`${baseUrl}/companies/${id}`, { headers: { Authorization: access_token } });\n\n\tif (response.ok) {\n\t\tconst payload = await response.json();\n\t\tdispatch(receiveCompany(payload));\n\t}\n};\n\nexport const fetchCompanies = () => async (dispatch, getState) => {\n\tconst { session: { access_token } } = getState();\n\tconst response = await fetch(`${baseUrl}/companies`, { headers: { Authorization: access_token } });\n\n\tif (response.ok) {\n\t\tconst { companies } = await response.json();\n\t\tdispatch(receiveCompanies(companies));\n\t}\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchCompanies } from '../actions/companyActions';\n\nconst Home = (props) => {\n\tconst { fetchCompanies, access_token } = props;\n\n\t// NOTE #3\n\tuseEffect(\n\t\t() => {\n\t\t\t// debugger\n\t\t\taccess_token && fetchCompanies();\n\t\t},\n\t\t[ fetchCompanies, access_token ]\n\t);\n\n\t// NOTE #4\n\tlet items = props.companies.map((c, i) => (\n\t\t<li\n\t\t\tclassName='company__item'\n\t\t\tkey={i}\n\t\t\t// NOTE #5\n\t\t\tonClick={() => props.history.push(`/companies/${c.id}`)}\n\t\t>\n\t\t\t{c.name}\n\t\t</li>\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>Stores near you:</h3>\n\n\t\t\t<ul className='company-list'>{items}</ul>\n\t\t</div>\n\t);\n};\n\n// NOTE #1\nconst msp = (state, ownProps) => {\n\treturn {\n\t\tcompanies: Object.values(state.companies),\n\t\taccess_token: state.session.access_token\n\t};\n};\n\n// NOTE #2\nconst mdp = (dispatch) => {\n\treturn {\n\t\tfetchCompanies: () => dispatch(fetchCompanies())\n\t};\n};\n\nexport default connect(msp, mdp)(Home);\n","export const baseUrl = process.env.NODE_ENV === 'development' ? 'http://localhost:8080/api' : '/api';\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { login } from '../actions/sessionActions';\n\nconst SessionForm = (props) => {\n\t// NOTE #2\n\tconst [ email, setEmail ] = useState('');\n\tconst [ password, setPassword ] = useState('');\n\n\t// NOTE #4\n\tconst handleChange = (e) => {\n\t\tlet method = e.target.name === 'email' ? setEmail : setPassword;\n\t\tmethod(e.target.value);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// debugger\n\t\tprops.login(email, password);\n\t};\n\n\treturn (\n\t\t<div className='session-form'>\n\t\t\t<h1>Login Below</h1>\n\n\t\t\t{/* NOTE #5 */}\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<label>Email</label>\n\n\t\t\t\t{/* NOTE #3 */}\n\t\t\t\t<input name='email' value={email} onChange={handleChange} />\n\t\t\t\t<label>Password</label>\n\t\t\t\t<input name='password' type='password' value={password} onChange={handleChange} />\n\t\t\t\t<button type='submit'>Login</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\n// const msp = (state, ownProps) => {\n//   return {\n//     access_token: state.session.access_token,\n//   };\n// };\n\n// NOTE #1\nconst mdp = (dispatch) => {\n\treturn {\n\t\tlogin: (email, password) => dispatch(login(email, password))\n\t};\n};\n\nexport default connect(null, mdp)(SessionForm);\n","import { baseUrl } from '../config';\n\nexport const RECEIVE_ITEMS = 'RECEIVE_ITEMS';\nexport const RECEIVE_ITEM = 'RECEIVE_ITEM';\n\nconst receiveItems = (items) => {\n\treturn {\n\t\ttype: RECEIVE_ITEMS,\n\t\titems\n\t};\n};\n\nconst receiveItem = (item) => {\n\treturn {\n\t\ttype: RECEIVE_ITEM,\n\t\titem\n\t};\n};\n\nexport const fetchItems = (companyId, type) => async (dispatch) => {\n\tconst response = await fetch(`${baseUrl}/items/${companyId}/${type}`);\n\n\tif (response.ok) {\n\t\tconst { items } = await response.json();\n\t\tdispatch(receiveItems(items));\n\t}\n};\n\nexport const createItem = (item, companyId) => async (dispatch) => {\n\tlet response = await fetch(`${baseUrl}/items/${companyId}/new`, {\n\t\tmethod: 'post',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify(item)\n\t});\n\n\tresponse = await response.json();\n\tif (response.ok) {\n\t\tconst { item } = response;\n\t\tdispatch(receiveItem(item));\n\t} else {\n\t\tconsole.log(response);\n\t}\n};\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createItem } from '../actions/itemActions';\n\nconst ItemForm = (props) => {\n\t// NOTE #1\n\tlet { createItem, companyId, updateTab, currentTab } = props;\n\n\tconst [ imgSrc, setImgSrc ] = useState('');\n\tconst [ name, setName ] = useState('');\n\tconst [ type, setType ] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tif (e.target.name === 'name') {\n\t\t\tsetName(e.target.value);\n\t\t} else if (e.target.name === 'type') {\n\t\t\tsetType(e.target.value);\n\t\t} else {\n\t\t\tsetImgSrc(e.target.value);\n\t\t}\n\t};\n\n\t// NOTE #3\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tlet newItem = { name: name, imgSrc: imgSrc, type: type };\n\n\t\tcreateItem(newItem, companyId);\n\n\t\tif (type !== currentTab && [ 'fruit', 'vegetable' ].includes(type.toLowerCase())) {\n\t\t\tupdateTab(type);\n\t\t}\n\t\tsetImgSrc('');\n\t\tsetName('');\n\t\tsetType('');\n\t};\n\tlet form = (\n\t\t<form className='product-form' onSubmit={handleSubmit}>\n\t\t\t<input value={name} name='name' placeholder='Enter item name...' onChange={handleChange} />\n\n\t\t\t<input value={imgSrc} name='imgSrc' placeholder='Enter item imgSrc...' onChange={handleChange} />\n\n\t\t\t<input value={type} name='type' placeholder='Enter item type...' onChange={handleChange} />\n\n\t\t\t<button type='submit'>{`Add new ${currentTab}`}</button>\n\t\t</form>\n\t);\n\treturn form;\n};\n\nconst mdp = (dispatch) => {\n\treturn {\n\t\tcreateItem: (item, id) => dispatch(createItem(item, id))\n\t};\n};\n\nexport default connect(null, mdp)(ItemForm);\n","import React from 'react';\n\nconst ItemList = (props) => {\n\tlet itemEls = props.items.map((c) => (\n\t\t<li key={c.id} className='product-list__item'>\n\t\t\t<label>{c.name}</label>\n\t\t\t<img src={c.imgSrc} alt={c.name} />\n\t\t</li>\n\t));\n\tlet list = <ul className='product-list'>{itemEls}</ul>;\n\treturn list;\n};\n\nexport default ItemList;\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { fetchItems } from '../actions/itemActions';\n\nimport ItemForm from './itemForm';\nimport ItemList from './itemList';\n\nconst ItemSection = (props) => {\n\t// NOTE #3\n\tconst [ currentTab, setCurrentTab ] = useState('fruit');\n\n\tconst { fetchItems, companyId, items } = props;\n\n\t// NOTE #4\n\tuseEffect(\n\t\t() => {\n\t\t\tfetchItems(companyId, currentTab);\n\t\t},\n\t\t[ currentTab, fetchItems, companyId ]\n\t);\n\n\treturn (\n\t\t<section className='product-section'>\n\t\t\t<h2>{currentTab}</h2>\n\n\t\t\t<div className='tabs'>\n\t\t\t\t<button\n\t\t\t\t\tclassName={currentTab === 'fruit' ? 'selected' : ''}\n\t\t\t\t\tname='fruit'\n\t\t\t\t\t// NOTE #5\n\t\t\t\t\tonClick={() => setCurrentTab('fruit')}\n\t\t\t\t>\n\t\t\t\t\tFruit\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tclassName={currentTab === 'fruit' ? '' : 'selected'}\n\t\t\t\t\tname='Vegetables'\n\t\t\t\t\tonClick={() => setCurrentTab('vegetable')}\n\t\t\t\t>\n\t\t\t\t\tVegetables\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<ItemList items={items} />\n\n\t\t\t<ItemForm companyId={companyId} currentTab={currentTab} updateTab={setCurrentTab} />\n\t\t</section>\n\t);\n};\n\n// NOTE #1\nconst msp = (state, ownProps) => {\n\tlet companyId = ownProps.match.params.companyId;\n\treturn {\n\t\tcompanyId: companyId,\n\t\tcompany: state.companies[companyId],\n\t\titems: Object.values(state.items) || []\n\t};\n};\n\n// NOTE #2\nconst mdp = (dispatch) => {\n\treturn {\n\t\tfetchItems: (id, type) => dispatch(fetchItems(id, type))\n\t};\n};\n\nexport default withRouter(connect(msp, mdp)(ItemSection));\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchCompany } from '../actions/companyActions';\n\nimport ItemSection from './itemSection';\n\nconst CompanyShow = (props) => {\n\tconst { fetchCompany, companyId } = props;\n\n\t// NOTE #3\n\tuseEffect(\n\t\t() => {\n\t\t\tfetchCompany(companyId);\n\t\t},\n\t\t[ fetchCompany, companyId ]\n\t);\n\n\tif (!props.company) return null;\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>{props.company.name}</h1>\n\n\t\t\t{/* NOTE #4 */}\n\t\t\t<ItemSection />\n\t\t</div>\n\t);\n};\n\n// NOTE #1\nconst msp = (state, ownProps) => {\n\tlet companyId = ownProps.match.params.companyId;\n\treturn {\n\t\tcompanyId: companyId,\n\t\tcompany: state.companies[companyId]\n\t};\n};\n\n// NOTE #2\nconst mdp = (dispatch) => {\n\treturn {\n\t\tfetchCompany: (id) => dispatch(fetchCompany(id))\n\t};\n};\n\nexport default connect(msp, mdp)(CompanyShow);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/sessionActions';\n\nconst Navbar = (props) => {\n\treturn (\n\t\t<nav className='navbar'>\n\t\t\t<h1 onClick={() => props.history.push('/')}>FruitApp</h1>\n\t\t\t<button onClick={props.logout}>Logout</button>\n\t\t</nav>\n\t);\n};\n\n// const msp = (state, ownProps) => {\n// \treturn {\n// \t\taccess_token: state.session.access_token\n// \t};\n// };\n\nconst mdp = (dispatch) => {\n\treturn {\n\t\tlogout: () => dispatch(logout())\n\t};\n};\n\nexport default connect(null, mdp)(Navbar);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport { PrivateRoute, AuthRoute } from './utils/routeUtils';\nimport { loadToken, TOKEN_KEY } from './actions/sessionActions';\n\nimport Home from './components/home';\nimport Session from './components/session';\nimport CompanyShow from './components/companyShow';\nimport Navbar from './components/navbar';\n\nimport './index.css';\n\nconst App = (props) => {\n\tconst { loadToken } = props;\n\n\t// NOTE #3\n\tuseEffect(\n\t\t() => {\n\t\t\tloadToken();\n\t\t},\n\t\t[ loadToken ]\n\t);\n\n\tlet localStorageToken = window.localStorage.getItem(TOKEN_KEY);\n\tlet access_token = localStorageToken ? localStorageToken : props.access_token;\n\n\tlet loggedIn = access_token ? true : false;\n\n\t// debugger\n\treturn (\n\t\t<BrowserRouter>\n\t\t\t{/* NOTE #4 */}\n\t\t\t{loggedIn ? <Route path='/' component={Navbar} /> : null}\n\n\t\t\t<Switch>\n\t\t\t\t{/* NOTE #5 */}\n\t\t\t\t<AuthRoute path='/session' component={Session} loggedIn={loggedIn} />\n\n\t\t\t\t{/* NOTE #6*/}\n\t\t\t\t<PrivateRoute path='/companies/:companyId' component={CompanyShow} loggedIn={loggedIn} />\n\n\t\t\t\t<PrivateRoute exact={true} path='/' component={Home} loggedIn={loggedIn} />\n\t\t\t</Switch>\n\t\t</BrowserRouter>\n\t);\n};\n\n// NOTE #1\nconst msp = (state) => {\n\treturn {\n\t\taccess_token: state.session.access_token\n\t};\n};\n\n// NOTE #2\nconst mdp = (dispatch) => {\n\treturn {\n\t\tloadToken: () => dispatch(loadToken())\n\t};\n};\n\nexport default connect(msp, mdp)(App);\n","import { SET_TOKEN, REMOVE_TOKEN } from '../actions/sessionActions';\n\nconst initialState = {\n\tid: null,\n\taccess_token: null\n};\nconst sessionReducer = (state = initialState, action) => {\n\tObject.freeze(state);\n\n\tlet nextState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase SET_TOKEN:\n\t\t\t// debugger\n\t\t\treturn Object.assign(nextState, { access_token: action.access_token });\n\t\tcase REMOVE_TOKEN:\n\t\t\treturn initialState;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default sessionReducer;\n","import { RECEIVE_COMPANY, RECEIVE_COMPANIES } from '../actions/companyActions';\n\nconst companyReducer = (state = {}, action) => {\n\tObject.freeze(state);\n\n\tlet nextState = Object.assign({}, state);\n\n\tswitch (action.type) {\n\t\tcase RECEIVE_COMPANY:\n\t\t\t// debugger\n\t\t\tlet newComp = { [action.payload.company.id]: action.payload.company };\n\t\t\treturn Object.assign(nextState, newComp);\n\t\tcase RECEIVE_COMPANIES:\n\t\t\tlet newState = {};\n\t\t\taction.companies.forEach((c) => (newState[c.id] = c));\n\t\t\treturn Object.assign(nextState, newState);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default companyReducer;\n","import { RECEIVE_ITEMS, RECEIVE_ITEM } from '../actions/itemActions';\nimport { RECEIVE_COMPANY } from '../actions/companyActions';\n\nconst itemReducer = (state = {}, action) => {\n\tObject.freeze(state);\n\n\tlet nextState = Object.assign({}, state);\n\tlet newState = {};\n\n\tswitch (action.type) {\n\t\tcase RECEIVE_ITEMS:\n\t\t\taction.items.forEach((i) => (newState[i.id] = i));\n\t\t\treturn newState;\n\t\tcase RECEIVE_COMPANY:\n\t\t\taction.payload.items.forEach((i) => {\n\t\t\t\tif (i.type === 'fruit') newState[i.id] = i;\n\t\t\t});\n\t\t\treturn newState;\n\t\tcase RECEIVE_ITEM:\n\t\t\treturn Object.assign(nextState, { [action.item.id]: action.item });\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default itemReducer;\n","import { combineReducers } from 'redux';\n\nimport sessionReducer from './sessionReducer';\nimport companyReducer from './companyReducer';\nimport itemReducer from './itemReducer';\n\nconst rootReducer = combineReducers({\n\tsession: sessionReducer,\n\tcompanies: companyReducer,\n\titems: itemReducer\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n// import logger from \"redux-logger\";\n\nimport rootReducer from '../reducers/rootReducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst configureStore = (initialState={}) => {\n  return createStore(\n    rootReducer,\n    initialState,\n    // applyMiddleware(thunk, logger)\n    composeEnhancers(applyMiddleware(thunk))\n  );\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n"],"sourceRoot":""}